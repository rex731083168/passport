package cn.easywed.stargate.controller;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import cn.easywed.stargate.common.util.JsonUtil;
import cn.easywed.stargate.dao.persistence.RRoleAuth;
import cn.easywed.stargate.dao.persistence.Role;
import cn.easywed.stargate.service.IRerationService;
import cn.easywed.stargate.service.IRoleService;

@RequestMapping("/role")
@Controller
public class RoleController {

	@Resource
	IRoleService roleService;
	
	@Resource
	IRerationService rerationService;
	
	@RequestMapping("/getRoles")
	@ResponseBody
	public String getRoles(HttpServletRequest request) {

		Map<String, Object> retMap = new HashMap<String, Object>();
		retMap.put("code", 0);
		retMap.put("msg", "ok");
		String roleName = request.getParameter("roleName");
		String beganDate = request.getParameter("beganDate");
		String endDate = request.getParameter("endDate");
		Date date = new Date();

		Map condition =new HashMap();
		condition.put("roleName", roleName);
		condition.put("beganDate", beganDate);
		condition.put("endDate", endDate);
		List<Role> roleList=roleService.getRoles(condition);
		retMap.put("roleList", roleList);
		
		return JsonUtil.toJson(retMap);

	}
	

//	//路由页
//	@RequestMapping("/roleIndex")
//	public ModelAndView index(HttpServletRequest request, HttpSession session) {
//
//		ModelAndView mav = new ModelAndView("addRole");
//
//		Map<String, Object> retMap = new HashMap<String, Object>();
//		retMap.put("code", 0);
//		retMap.put("msg", "ok");
//		retMap.put("data", "");
//		mav.addObject("retMap", retMap);
//
//		return mav;
//	}

	

	

	@RequestMapping("/addrole")
	@ResponseBody
	public String addrole(HttpServletRequest request) {

		Map<String, Object> retMap = new HashMap<String, Object>();
		retMap.put("code", 0);
		retMap.put("msg", "ok");
		String roleName = request.getParameter("roleName");
		String description = request.getParameter("description");
		Date date = new Date();
		Role role = new Role();
		role.setRoleName(roleName);
		role.setDescription(description);
		role.setCreateTime(date);
		role.setStatus(0);
		roleService.addRole(role);
		return JsonUtil.toJson(retMap);
	}
	
	@RequestMapping("/getRole")
	@ResponseBody
	public String getRole(HttpServletRequest request) {

		Map<String, Object> retMap = new HashMap<String, Object>();
		Map<String, Object> dataMap = new HashMap<String, Object>();
		retMap.put("code", 1);
		retMap.put("msg", "ok");
		String roleId = request.getParameter("roleId");
		long roleid = Integer.parseInt(roleId);

		Role role = roleService.getById(roleid);
		dataMap.put("role", role);
		retMap.put("data", dataMap);
		return JsonUtil.toJson(retMap);

	}
	
//	@RequestMapping("/updateRouter")
//	public ModelAndView updateRouter(HttpServletRequest request, HttpSession session) {
//
//		ModelAndView mav = new ModelAndView("updateRouter");
//
//		Map<String, Object> retMap = new HashMap<String, Object>();
//		Map<String, Object> dataMap = new HashMap<String, Object>();
//
//		retMap.put("code", 0);
//		retMap.put("msg", "ok");
//
//		String roleId = request.getParameter("roleId");
//		long roleid = Integer.parseInt(roleId);
//
//		Role role = roleService.getById(roleid);
//		dataMap.put("role", role);
//
//		retMap.put("data", dataMap);
//		mav.addObject("retMap", retMap);
//
//		return mav;
//	}
	
	/**
	 * 更新角色
	 * 
	 * 
	 */
	@RequestMapping("/updateRole")
	@ResponseBody
	public String updateRole(HttpServletRequest request, HttpSession session) {

		Map<String, Object> retMap = new HashMap<String, Object>();
		retMap.put("code", 0);
		retMap.put("msg", "ok");
		String roleId = request.getParameter("roleId");
		long roleid = Integer.parseInt(roleId);
		
		String roleName = request.getParameter("roleName");
		String description = request.getParameter("description");
		Date date = new Date();
		Role role = new Role();
		role.setRoleId(roleid);
		role.setRoleName(roleName);
		role.setDescription(description);
		role.setCreateTime(date);
		role.setStatus(0);
		int i=roleService.updateRole(role);
		if(i==0){
			retMap.put("code", 1);
			retMap.put("msg", "updateFailed");
			return JsonUtil.toJson(retMap);
		}
		return JsonUtil.toJson(retMap);
	}
	
	/**
	 * 角色分配权限
	 * 
	 * 
	 */
	@RequestMapping("/allotAuth")
	@ResponseBody
	public String allotAuth(HttpServletRequest request, HttpSession session) {

		Map<String, Object> retMap = new HashMap<String, Object>();
		retMap.put("code", 0);
		retMap.put("msg", "ok");
		String roleId = request.getParameter("roleId");
		long roleid = Integer.parseInt(roleId);
		
		String auths = request.getParameter("auths");
		String auth[]=auths.split(",");
		
		RRoleAuth rroleAuth=new RRoleAuth();
		rroleAuth.setRoleId(roleid);
		for(int i=0;i<auth.length;i++){
			rroleAuth.setAuthId(Integer.valueOf(auth[i]));
			rerationService.addRoleAuth(rroleAuth);	
		}
		
		return JsonUtil.toJson(retMap);
	}

}
