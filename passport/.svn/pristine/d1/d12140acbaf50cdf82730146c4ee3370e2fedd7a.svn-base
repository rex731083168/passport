package stargate;




import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.IntegrationTest;
import org.springframework.boot.test.SpringApplicationConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.test.context.web.WebAppConfiguration;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.MvcResult;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.web.context.WebApplicationContext;

import cn.easywed.stargate.Application;

/**
 * Created by fu on 3/2/17.
 */

@RunWith(SpringJUnit4ClassRunner.class)
@SpringApplicationConfiguration(classes = Application.class)
@WebAppConfiguration
@IntegrationTest("server.port:0")
public class RoleControlerTest {

    @Autowired
    private WebApplicationContext wac;

    private MockMvc mockMvc;

    @Before
    public void setup() throws Exception {
        mockMvc = MockMvcBuilders.webAppContextSetup(wac).build();
    }



  
//	@Test
//	public void getauths() throws Exception {
//	    MvcResult result = mockMvc.perform(post("/role/allotAuth")
//	            .param("roleId", "1")
//	            .param("auths","1,2,3"))
//	            .andExpect(status().isOk())
//	            .andReturn();
//	    String json = result.getResponse().getContentAsString();
//	    System.out.println(json);
//	}

//  @Test
//  public void getroles() throws Exception {
//      MvcResult result = mockMvc.perform(post("/role/getRoles")
//              .param("roleName", "录入客服"))
//              .andExpect(status().isOk())
//              .andReturn();
//      String json = result.getResponse().getContentAsString();
//      System.out.println(json);
//  }
  
//	@Test
//	public void testAddRole() throws Exception {
//		MvcResult result = mockMvc.perform(post("/role/addrole").param("roleName", "没啥juese").param("description", "ss折腾"))
//				.andExpect(status().isOk()).andReturn();
//		String json = result.getResponse().getContentAsString();
//		System.out.println(json);
//	}
	
  @Test
  public void updaterole() throws Exception {
  MvcResult result = mockMvc.perform(post("/role/updateRole")
          .param("roleId", "103")
          .param("roleName", "顾问领导2")
          .param("description", "分配任务1"))
          .andExpect(status().isOk())
          .andReturn();
  String json = result.getResponse().getContentAsString();
  System.out.println(json);
}
	
	
	
  
}
