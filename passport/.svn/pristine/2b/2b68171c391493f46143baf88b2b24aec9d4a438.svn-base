package cn.easywed.stargate.controller;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import cn.easywed.stargate.common.util.JsonUtil;
import cn.easywed.stargate.dao.persistence.Auth;
import cn.easywed.stargate.dao.persistence.SysInfo;
import cn.easywed.stargate.service.IAuthService;
import cn.easywed.stargate.service.ISysInfoService;
import cn.easywed.stargate.service.IUserService;

@RequestMapping("/auth")
@Controller
public class AuthController {
	
	@Resource
	IUserService userService;
	
	@Resource
	IAuthService authService;
	
	@Resource
	ISysInfoService iSysInfoService;
	
	@RequestMapping("/getAuths")
	@ResponseBody
	public String getRoles(HttpServletRequest request) {

		Map<String, Object> retMap = new HashMap<String, Object>();
		retMap.put("code", 0);
		retMap.put("msg", "ok");
		String authName = request.getParameter("authName");
		String systemId = request.getParameter("systemId");
		String isvalid = request.getParameter("isvalid");

		Map condition =new HashMap();
		condition.put("authName", authName);
		condition.put("systemId", systemId);
		condition.put("isvalid", isvalid);
//		if(sysId!=""){
//			 int sysid= Integer.valueOf(sysId);
//			 condition.put("sysId", sysid);
//		}
//		if(isvalid!=""){
//			 int isValid= Integer.valueOf(isvalid);
//			 condition.put("isvalid", isValid);
//		}
		
		List<Auth> authList=authService.getAuths(condition);
		retMap.put("authList", authList);
		
		return JsonUtil.toJson(retMap);

	}
	
	@RequestMapping("/authIndex")
	@ResponseBody
	public String index(HttpServletRequest request, HttpSession session) {
		Map<String,Object> retMap=new HashMap<String ,Object>();
		retMap.put("code",1);
		retMap.put("msg", "ok");
		
		List<SysInfo> sysInfo=iSysInfoService.getSysInfo();
		retMap.put("data", sysInfo);
		return JsonUtil.toJson(retMap);
	}	

	
	@RequestMapping("/addAuth")
	@ResponseBody
	public String addAuth(HttpServletRequest request) {
	
		Map<String,Object> retMap=new HashMap<String ,Object>();
		retMap.put("code",0);
		retMap.put("msg", "ok");
		String authName=request.getParameter("authName");
		String url=request.getParameter("url");
		String systemId=request.getParameter("systemId");
		int belongSys=Integer.valueOf(systemId);
		Date date=new Date();
		Auth auth=new Auth();
		auth.setAuthName(authName);
		auth.setUrl(url);
		auth.setBelongSys(belongSys);
		auth.setCreateTime(date);
		auth.setIsvalid(0);
		auth.setStatus(0);
		authService.addAuth(auth);
		return JsonUtil.toJson(retMap);
						
	}
	
	/**
	 * 获取权限
	 * @param request
	 * @return
	 */
	@RequestMapping("/getAuth")
	@ResponseBody
	public String getAuth(HttpServletRequest request) {
	
		Map<String,Object> retMap=new HashMap<String ,Object>();
		retMap.put("code",0);
		retMap.put("msg", "ok");
		String authId=request.getParameter("authId");
	    long authid=Integer.parseInt(authId);
		
		Auth auth=authService.getById(authid);
		List<SysInfo> sysInfo=iSysInfoService.getSysInfo();
		Map<String,Object> dataMap=new HashMap<String ,Object>();
		dataMap.put("sysInfo", sysInfo);
		dataMap.put("auth", auth);
		
		retMap.put("data", dataMap);
		return JsonUtil.toJson(retMap);
						
	}
	
	@RequestMapping("/updateAuth")
	@ResponseBody
	public String updateAuth(HttpServletRequest request) {
	
		Map<String,Object> retMap=new HashMap<String ,Object>();
		retMap.put("code",0);
		retMap.put("msg", "ok");
		String authId=request.getParameter("authId");
	    long authid=Integer.parseInt(authId);
		
	    String authName=request.getParameter("authName");
		String url=request.getParameter("url");
		String systemId=request.getParameter("systemId");
		int belongSys=Integer.valueOf(systemId);
		Auth auth=new Auth();
		auth.setAuthId(authid);
		auth.setAuthName(authName);
		auth.setUrl(url);
		auth.setBelongSys(belongSys);
		
		int i=authService.updateAuth(auth);
		if(i==0){
			retMap.put("code", 1);
			retMap.put("msg", "updateFailed");
			return JsonUtil.toJson(retMap);
		}
		
		return JsonUtil.toJson(retMap);
						
	}
}
